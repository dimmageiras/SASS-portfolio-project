.menu-btn {
	background-color: transparent;
	border: none;
	color: inherit;
	cursor: pointer;
	display: block;
	font: inherit;
	height: 20px;
	position: absolute;
	right: 2rem;
	text-align: inherit;
	top: 1rem;
	width: 28px;
	z-index: 1;
	@include transition-ease;

	&__burger {
		background-color: set-text-color($primaryColor);
		height: 3px;
		position: absolute;
		right: 0;
		top: 0.5rem;
		width: 28px;
		@include transition-ease;

		&::before {
			background-color: set-text-color($primaryColor);
			content: "";
			height: 3px;
			position: absolute;
			top: -8px;
			width: 28px;
			@include transition-ease;
		}

		&::after {
			background-color: set-text-color($primaryColor);
			content: "";
			height: 3px;
			position: absolute;
			top: 8px;
			width: 20px;
			@include transition-ease;
		}

		&:hover,
		&:hover::before,
		&:hover::after {
			background-color: $secondaryColor;
		}

		&.open {
			background-color: transparent;
			transform: rotate(720deg);

			&::before {
				transform: rotate(45deg) translate(5px, 8px);
			}

			&::after {
				transform: rotate(-45deg) translate(3px, -7px);
				width: 28px;
			}
		}
	}
}

.nav {
	left: 0;
	opacity: 0.98;
	position: fixed;
	top: 0;
	visibility: hidden;
	width: 100vw;

	&.open {
		visibility: visible;
	}

	.menu-nav {
		align-items: center;
		background-color: $primaryColor;
		display: flex;
		flex-flow: column wrap;
		height: 100vh;
		justify-content: center;
		list-style-type: none;
		overflow: hidden;
		padding-right: 1rem;
		transform: translateY(-100%);
		@include transition-ease;

		&.open {
			transform: translateY(0);
		}

		&__item {
			transform: translateX(100vw);
			@include transition-ease;

			&.open {
				transform: translateX(0);
			}

			&.active > a {
				color: $secondaryColor;
			}
		}
		&__link {
			display: inline-block;
			font-size: 2rem;
			font-weight: 300;
			padding: 2rem 0;
			text-transform: uppercase;
			@include transition-ease;

			&:hover {
				color: $secondaryColor;
			}
		}
	}
}

@for $i from 1 through 4 {
	.menu-nav__item:nth-child(#{$i}) {
		transition-delay: ($i * 0.1s) + 0.15s;
	}
}
